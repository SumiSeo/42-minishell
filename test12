total 140
drwxr-xr-x 17 sumseo 2023_paris  4096 Jun  9 19:44 .
drwxr-xr-x  8 sumseo 2023_paris   103 May 18 10:48 ..
drwxr-xr-x  2 sumseo 2023_paris     6 Jun  8 19:02 $@)
drwxr-xr-x  2 sumseo 2023_paris     6 Jun  8 19:02 $(dir
-rw-r--r--  1 sumseo 2023_paris  1353 Jun  8 19:02 32423
drwxr-xr-x  2 sumseo 2023_paris   125 Jun  8 18:38 builtin
-rw-r--r--  1 sumseo 2023_paris  2215 May 29 18:48 e_execution_system.c
drwxr-xr-x  2 sumseo 2023_paris    31 Jun  8 17:31 error_handler
drwxr-xr-x  2 sumseo 2023_paris   124 Jun  8 18:38 execution
drwxr-xr-x  2 sumseo 2023_paris    81 Jun  1 17:59 get_next_line
drwxr-xr-x  8 sumseo 2023_paris   220 Jun  8 22:23 .git
drwxr-xr-x  2 sumseo 2023_paris    29 Jun  8 17:31 input_handler
drwxr-xr-x  2 sumseo 2023_paris   102 Jun  8 18:38 lexical_analysis
drwxr-xr-x  2 sumseo 2023_paris  4096 Jun  8 17:34 libft
-rw-r--r--  1 sumseo 2023_paris  1350 Jun  8 17:31 Makefile
-rwxr-xr-x  1 sumseo 2023_paris 49080 Jun  9 18:42 minishell
-rw-r--r--  1 sumseo 2023_paris  2406 Jun  8 21:26 minishell.c
-rw-r--r--  1 sumseo 2023_paris  5617 Jun  8 22:20 minishell.h
drwxr-xr-x 11 sumseo 2023_paris   225 Jun  8 21:52 obj
-rwxr-xr-x  1 sumseo 2023_paris   107 Jun  9 18:25 out
-rwxr-xr-x  1 sumseo 2023_paris   109 Jun  9 18:25 out2
-rwxr-xr-x  1 sumseo 2023_paris   107 Jun  9 18:25 out3
-rwxr-xr-x  1 sumseo 2023_paris     0 Jun  9 18:26 out4
-rwxr-xr-x  1 sumseo 2023_paris   107 Jun  9 18:26 out5
drwxr-xr-x  2 sumseo 2023_paris   150 Jun  8 17:31 parsing
-rw-r--r--  1 sumseo 2023_paris  2397 May 29 18:48 ReadMe.md
drwxr-xr-x  2 sumseo 2023_paris    69 Jun  8 17:31 store_env
-rw-r--r--  1 sumseo 2023_paris   109 Jun  9 18:27 test
-rw-r--r--  1 sumseo 2023_paris   241 Jun  8 22:21 test1
-rwxr-xr-x  1 sumseo 2023_paris   721 Jun  9 18:39 test10
-rw-r--r--  1 sumseo 2023_paris     0 Jun  9 19:44 test11
-rw-r--r--  1 sumseo 2023_paris     0 Jun  9 19:44 test12
-rw-r--r--  1 sumseo 2023_paris   241 Jun  8 22:21 test2
-rw-r--r--  1 sumseo 2023_paris   241 Jun  8 22:21 test3
-rwxr-xr-x  1 sumseo 2023_paris   112 Jun  9 18:42 test6
-rw-r--r--  1 sumseo 2023_paris  2139 Jun  9 18:42 test7
-rw-r--r--  1 sumseo 2023_paris  2253 Jun  9 19:44 test8
-rw-r--r--  1 sumseo 2023_paris  4506 Jun  9 19:44 test9
drwxr-xr-x  2 sumseo 2023_paris    23 Jun  1 17:59 utils_display
drwxr-xr-x  2 sumseo 2023_paris    27 May 22 15:35 .vscode
NAME = minishell

#SRCS AND OBJS FOR COMPILING

SRCS = minishell.c error_handler/error_controler.c\
input_handler/input_handler.c\
e_execution_system.c\
execution/pipe_init.c\
execution/pipe_utils.c\
execution/runtime.c\
execution/exec_utils.c\
execution/redirect_init.c\
builtin/echo.c\
builtin/pwd.c\
builtin/cd.c\
builtin/exit.c\
builtin/export.c\
builtin/unset.c\
builtin/env.c\
builtin/find_builtin.c\
lexical_analysis/check_input.c\
lexical_analysis/create_token_list.c\
lexical_analysis/count_nb_pipe.c\
lexical_analysis/free_token_list.c\
parsing/create_parse_list.c\
parsing/check_infile.c\
parsing/check_outfile.c\
parsing/free_parse_list.c\
parsing/search_command.c\
parsing/store_command.c\
store_env/store_env_list.c\
store_env/store_path.c\
store_env/env_utils.c\
utils_display/display.c\
get_next_line/get_next_line.c get_next_line/get_next_line_utils.c\

INCLUDES = libft/
OBJDIR = obj

OBJS = $(SRCS:%.c=$(OBJDIR)/%.o)

#FLAGS 
CC = clang
CFLAGS = -Wall -Werror -Wextra
LDFLAGS = -lreadline
CLIB = -L libft/ -l libft
DEBUGGER = -g3

all : $(NAME)

$(NAME) : $(OBJS)
		make -C libft
		$(CC) $(OBJS) -I $(INCLUDES) -o $(NAME) $(CLIB) $(LDFLAGS) $(DEBUGGER)

$(OBJDIR)/%.o : %.c
		mkdir -p $(dir $@)
		$(CC) $(CFLAGS) -c $< -o $@

clean :
		rm -rf $(OBJDIR)

fclean : clean
		rm -rf $(NAME)

re : fclean all

.PHONY: all clean fclean re